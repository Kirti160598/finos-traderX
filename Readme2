###
Added Trivy Vulnerability Scanning for Docker Images in Jenkins Pipeline
========================================================================
stage('Scan Docker Image') {
            steps {
               // Display Trivy version for verification
                bat 'trivy --version'
              // Clean previous Java vulnerability database cache to ensure fresh scan data
                bat 'trivy clean --java-db'
              // Scan the Docker image with a 10-minute timeout, output results in JSON format
              //The results are saved as trivy-report.json for further analysis or reporting.
                bat 'trivy image --timeout 10m --format json -o trivy-report.json %DOCKER_IMAGE%'
    }
}
Deployment Strategy: Rolling Update 
===================================
The Kubernetes deployment uses a Rolling Update strategy to ensure zero downtime during application updates. This strategy gradually replaces old pods with new ones, allowing your service to stay available.

Configuration snippet from deployment.yaml(:
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

Explanation
                                           
replicas: 2 — Runs two pods to provide high availability.
strategy.type: RollingUpdate — Updates pods incrementally rather than all at once.
maxUnavailable: 1 — Allows at most one pod to be unavailable during the update.
maxSurge: 1 — Allows one extra pod to be created above the desired number of replicas during the update.

Undo a Deployment Rollout with kubectl
kubectl rollout undo deployment/database-deployment -n database-flux

Check Rollout Status
kubectl rollout status deployment/database-deployment -n database-flux

                                           View Rollout History
kubectl rollout history deployment/database-deployment -n database-flux

Output of rollout history
deployment.apps/database-deployment 
REVISION  CHANGE-CAUSE
1         <none>
2         <none>

Rollback to Specific Revision
kubectl rollout undo deployment/database-deployment -n database-flux --to-revision=1


Will work with readiness and liveness probe to rollback 
